# -*- yaml -*-
#===============================================================================
## @file defaults.yaml
## @brief Default settings shared across all applications
## @author Tor Slettnes <tor@slett.net>
#===============================================================================

# Default logging threshold; may be overridden for specific scopes.
log default: NOTICE

# Override the default log level setting above for specific scopes.
log thresholds:
  shared: NOTICE

# Include extra detail: log scope, thread ID, filename, function, line number
log context: false

# ANSI coloring for specific log levels sent to console
log styles:
  intro: ""
  text:
    trace   : "\e[38;5;244m" # dim grey
    debug   : "\e[38;5;74m"  # dim blue
    info    : "\e[34m"       # blue
    notice  : "\e[1;34m"     # bold, blue
    warning : "\e[1;33m"     # bold, yellow
    failed  : "\e[1;31m"     # bold, red
    critical: "\e[1;35m"     # bold, magenta
    fatal   : "\e[1;97;41m"  # bold, white on red
  reset: "\e[0m"

log sinks:
  # Log sinks that write directly to output files include "file", "json",
  # and "csv"; their corresponding settings sections below include a
  # "name template" which controls the name of the output files with the
  # following placeholders expanded:
  #
  #   - "executable": the name of the executable, minus any suffix (e.g. `.exe`)
  #   - "sink_id"   : the identity of the log sink, e.g. `"log"` or `"csv"`
  #   - "isodate"   : date formatted as "YYYY-MM-DD"
  #   - "isotime    : time of day formatted as "HH:MM:SS"
  #   - "year"      : four-digit year
  #   - "month"     : two-digit month (01 - 12)
  #   - "day"       : two-digit day (01 - 31)
  #   - "hour"      : two-digit hour (00 - 23)
  #   - "minute"    : two-digit minute (00 - 59)
  #   - "second"    : two-digit second (00 - 61)
  #   - "zonename"  : time zone name or abbreviation (e.g., "PST")
  #   - "zoneoffset": time zone offset (e.g. "-0700")
  #
  # The timestamp  is the  "last aligned" time  point, i.e.,  the current
  # time truncated according to the setting "log json rotatation", below.
  # For instance, given a six-hour rotation interval the timestamps would
  # be truncated to 00:00, 06:00, 12:00, and 18:00, local time.

  # Log to standard error
  stderr:
    include context: true

  # UNIX SysLog settings
  syslog:
    # Minimum log level to capture
    threshold: DEBUG

    # Include source context in message
    include context: false

  # Log to JSON files
  json:
    # Log to JSON file enabled.  Defaults to `false`
    # enabled : false

    # Level threshold.  Events with a lower severity level will be ignored.
    threshold: TRACE

    # JSON filename template, expanded as described above.
    name template: "{executable}-{isodate}-{hour}{minute}{zoneoffset}.json"

    # How often do we want to switch to a new log file, in seconds.
    # Default: 6 hours = 21600 seconds
    rotation: 6 hours

    # Derive JSON log file name from local time.
    local time: true

  # Log to plaintext `.log` files
  file:
    # Log to text file enabled.  Defaults to `false`.
    # enabled : true

    # Log logger threshold
    threshold: TRACE

    # Include source context in message
    include context: false

    # Logfile name template, expanded as described above.
    name template: "{executable}-{isodate}-{hour}{minute}{zoneoffset}.log"

    # How often do we want to switch to a new log file, in seconds.
    # Default: 6 hours = 21600 seconds
    rotation: 6 hours

    # Derive log file name from local time.
    local time : true

  # Log to plaintext `.log` files
  csv:
    # Log to text file enabled.  Defaults to `false`.
    # enabled: true

    # Log logger threshold
    threshold: DEBUG

    # Contract ID to capture
    contract id : "text"

    # Columns to include.
    columns:
      # Event field, optional CSV column header, optional format string
      - ["timestamp", "TIME", TEXT]
      - ["host", "HOST", TEXT]
      - ["origin", "ORIGIN", TEXT]
      - ["level", "LEVEL", TEXT]
      - ["log_scope", "SCOPE", TEXT]
      - ["thread_id", "THREAD", INTEGER]
      - ["source_path", "FILE", TEXT]
      - ["source_line", "LINE", INTEGER]
      - ["function_name", "FUNCTION", TEXT]
      - ["text", "TEXT", TEXT]

    # Column separator; `","` by default
    #column separator: "\t"

    # Logfile name template, expanded as described above.
    name template: "{executable}-{isodate}-{hour}{minute}{zoneoffset}.csv"

    # How often do we want to switch to a new log file.
    # Default is 6 hours.
    rotation: 1 day

    # Derive log file name from local time.
    local time: true

  # Log to SQLite3 `.db` files
  sqlite3:
    # Log to text file enabled.  Defaults to `false`.
    # enabled: false

    # Log logger threshold
    threshold: DEBUG

    # Columns to include.
    columns:
      # Event field, optional column name, column type, optional format string
      - ["timestamp", "timestamp", INTEGER]
      - ["host", "hostname", TEXT]
      - ["origin", "origin", TEXT]
      - ["level", "level", TEXT]
      - ["log_scope", "scope", TEXT]
      - ["thread_id", "thread", INTEGER]
      - ["source_path", "file", TEXT]
      - ["source_line", "line", INTEGER]
      - ["function_name", "function", TEXT]
      - ["text", "text", TEXT]

    # Logfile name template, expanded as described above.
    name template: "{executable}-{isodate}.db"

    # How often do we want to switch to a new log file, in seconds.
    # Default: 6 hours = 21600 seconds
    rotation: 1 week

    # Derive log file name from local time.
    local time: true

  # Log via RTI distributed logger (if built with option `USE_RTI_DISTRIBUTED_LOGGER`)
  rti-dl:
    enabled: false
    threshold: TRACE

  # Log via DDS (Topic `cc::status::LogEvent`)
  dds:
    enabled: false
    threshold: TRACE
